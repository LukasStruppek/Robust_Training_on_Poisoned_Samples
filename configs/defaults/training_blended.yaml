---
seed: 42

model:
  architecture: resnet101 # Model architecture, e.g., resnet50, densenet169, inceptionv3.
  num_classes: 10 # Number of classes in the training set.
  pretrained: false # Using the ImageNet weights for initialization.

dataset:
  name: imagenette # Name of the dataset. It should be one of the datasets in the datasets folder.
  root_train: data/imagenette/train
  root_test: data/imagenette/val
  image_size: 224 # Image size of training samples before application of transformations.

backdoor:
  target_idx: 0
  poison_first: true
  poisoning_rate: 0.1
  random_poisoning: false
  poison_target_class: false
  BlendedBackdoor: # Type of backdoor to be used. It should be one of the types in the backdoor folder.
    trigger_type: random
    blend_ratio: 0.2
    image_size: 224

transformations: # Transformations applied during training.
  # All transformations and parameters provided in torchvision.transforms could be specified.
  RandomHorizontalFlip:
    p: 0.5

optimizer: # Specify the optimizer and its parameters from torch.optim for training.
  Adam:
    lr: 0.001
    betas: [0.9, 0.999]
    weight_decay: 0

lr_scheduler: # Option to provide a learning rate scheduler from torch.optim.
  MultiStepLR:
    milestones: [30, 50]
    gamma: 0.1

training: # Select the training parameters.
  num_epochs: 100
  batch_size: 128
  dataloader_num_workers: 8
  save_path: results/

rtpt: # State RTPT details. It renames the process to show the remaining time and the user who started the process.
  experiment_name: Training target classifier
  name_initials: XX

wandb: # Options for WandB logging.
  enable_logging: true # Set to true to activate the logging.
  args: # Arguments for wandb.init call. See https://docs.wandb.ai/ref/python/init for a complete overview.
    project: backdoor_models
    name: ResNet101_ImageNette_Blended
    save_code: true
